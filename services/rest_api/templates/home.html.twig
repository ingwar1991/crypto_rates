{% extends 'base.html.twig' %}


{% block stylesheets %}
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        form { margin-bottom: 20px; padding: 10px; border: 1px solid #ccc; border-radius: 5px; }
        input, select { margin: 5px 0; padding: 5px; width: 100%; }
        button { padding: 5px 10px; }
        pre { background: #f4f4f4; padding: 10px; border-radius: 5px; }
    </style>
{% endblock %}

{% block body %}
    <h1>CryptoRates REST API</h3>

    <h2>1. Get JWT Token</h2>

    <h3>Admin API Key: {{apiKey}}</h3>
    <span>
        This API Key is provided for ease of testing.<br/>
        You can go to auth service and request your own.
    </span>
    <br/><br/>

    <form id="authForm">
      <label>API Key:</label>
      <input type="text" id="apiKey" required>
      <button type="submit">Get Token</button>
    </form>
    <pre id="authResult"></pre>

    <h2>2. Get Rates</h2>

    <h3>Available Pairs:<h3>
    <ul>
        {% for symbol in symbols %}
            <li>{{ symbol }}</li>
        {% endfor %}
    </ul>

    <form id="ratesForm">
      <label>Mode:</label>
      <select id="mode">
        <option value="latest">Latest Rates</option>
        <option value="avg">Avg Rates</option>
      </select>

      <label>JWT Token:</label>
      <input type="text" id="token" required>

      <label>Pairs:</label>
      <div id="pairsContainer">
        <input type="text" name="pair[]" placeholder="BTCEUR or alike" required>
      </div>
      <button type="button" id="addPair">Add another pair</button>
      <br/><br/>

      <label>Date:</label>
      <input type="date" id="date">

      <label>Limit:</label>
      <input type="number" id="limit">

      <label>Page:</label>
      <input type="number" id="page">

      <button type="submit">Get Rates</button>
    </form>
    <pre id="ratesResult"></pre>
{% endblock %}

{% block javascripts %}
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // add pairs input
            document.getElementById('addPair').addEventListener('click', () => {
                const input = document.createElement('input');
                input.type = 'text';
                input.name = 'pair[]';
                input.placeholder = 'New pair';

                document.getElementById('pairsContainer').appendChild(input);
            });

            // get JWT Token
            document.getElementById('authForm').addEventListener('submit', async (e) => {
                e.preventDefault();

                const apiKey = document.getElementById('apiKey').value;
                const res = await fetch('http://localhost:8082/auth', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                    body: `api_key=${encodeURIComponent(apiKey)}`
                });

                const data = await res.json();
                document.getElementById('authResult').textContent = JSON.stringify(data, null, 2);

                if (data.jwt) {
                    document.getElementById('token').value = data.jwt;
                }
            });

            // get rates
            document.getElementById('ratesForm').addEventListener('submit', async (e) => {
                e.preventDefault();

                const token = document.getElementById('token').value;
                const mode = document.getElementById('mode').value; // latest or avg
                const params = new URLSearchParams();

                const pairInputs = document.querySelectorAll('input[name="pair[]"]');
                pairInputs.forEach(input => {
                    const value = input.value.trim();
                    if (value) {
                        params.append('pair[]', value);
                    }
                });

                if (document.getElementById('date').value) {
                    params.append('date', document.getElementById('date').value);
                }
                if (document.getElementById('limit').value) {
                    params.append('limit', document.getElementById('limit').value);
                }
                if (document.getElementById('page').value) {
                    params.append('page', document.getElementById('page').value);
                }

                const res = await fetch(`/api/rates/${mode}?${params.toString()}`, {
                    headers: { 'Authorization': `Bearer ${token}` }
                });

                const status = res.status;

                // Try to parse JSON, fallback to text if parsing fails
                let data;
                try {
                    data = await res.json();
                } catch {
                    data = await res.text();
                }

                document.getElementById('ratesResult').textContent = `HTTP Status: ${status}\n\n${JSON.stringify(data, null, 2)}`;
            });
        });
    </script>
{% endblock %}
